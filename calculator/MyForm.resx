<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>